package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"procurement-be/graph/generated"
	"procurement-be/graph/model"
	"procurement-be/pkg/user"
	"procurement-be/utils"
)

// Login is the resolver for the Login field.
func (r *authMutationResolver) Login(ctx context.Context, obj *model.EmptyObject, in *model.LoginRequestInput) (*model.LoginResponse, error) {
	response := new(model.LoginResponse)
	result, err := r.PkgHandler.UserHandler.Login(ctx, user.LoginRequest{
		Email:    *in.Email,
		Password: *in.Password,
	})
	if err != nil {
		return nil, err
	}

	if err = utils.CopyObject(result, &response); err != nil {
		return nil, err
	}
	return response, nil
}

// AuthMutation returns generated.AuthMutationResolver implementation.
func (r *Resolver) AuthMutation() generated.AuthMutationResolver { return &authMutationResolver{r} }

type authMutationResolver struct{ *Resolver }
